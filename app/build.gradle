apply plugin: 'com.android.application'

android {
    compileSdkVersion = 26
    buildToolsVersion = "26.0.2"

    defaultConfig {
        applicationId "com.wolf.jumphelp"
        minSdkVersion 16
        targetSdkVersion 22

        flavorDimensions "debug"
        ndk {
            abiFilters "armeabi-v7a"
        }

    }

//    externalNativeBuild {
//        ndkBuild {
//            path 'jni/Android.mk'
//        }
//    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        jumboMode = true
        maxProcessCount 4 // this is the default value
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []//disable automatic ndk-build call
        }
    }

    signingConfigs {
        debug {
        }
        release {
            storeFile file("lolbox.keystore")
            storePassword "lolbox"
            keyAlias "lolbox"
            keyPassword "lolbox"
        }
    }

    buildTypes {
        release {
            //不显示Log
            buildConfigField "boolean", "LOG_INFO", "false"
            buildConfigField "boolean", "PRO", "true"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-fresco.pro'
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "PRO", "false"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            //manifestPlaceholders = [environment: "test", UMENG_CHANNEL: "common"]
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {
    }

    // 批量配置渠道
    productFlavors.all {
        //flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL: name, environment: ""]
    }

    applicationVariants.all {
        variant ->
            variant.outputs.each {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                        fileName = fileName.replace("app-", "bimo-")
                        output.outputFile.renameTo(new File(outputFile.parent, fileName));
                    }
            }
    }
}

dependencies {
    testImplementation 'junit:junit:4.12'
    api fileTree(include: '*.jar', dir: 'libs')
    api "com.android.support:appcompat-v7:25.2.0"
    api "android.arch.lifecycle:runtime:1.0.3"
    api "android.arch.lifecycle:extensions:1.0.0"
    annotationProcessor "android.arch.lifecycle:compiler:1.0.0"
}

